[FunlabFlask]
    HOME_ENTRY = 'blank.html'
    TITLE = 'FunLab - A Pluggable Flask Web Application Framework'
    APP_LOGO = '/static/logo.svg'
    APP_NAME = 'FunLab'
    ENV = '{{ENV.TEST}}'
[ENV]
    [ENV.DEVELOPMENT]
        DATABASE = '{{DATABASE.DEVELOPMENT}}'
        WSGI = 'flask'  # gunicorn waitress, flask
        PORT = 5001
        DEBUG = true
        TESTING = true
        EXPLAIN_TEMPLATE_LOADING = true
    [ENV.TEST]
        DATABASE = '{{DATABASE.TEST}}'
        WSGI = 'waitress'  # gunicorn waitress, flask
        PORT = 5001
        DEBUG = true
    # [ENV.PRODUCTION]
    #     DATABASE = '{{DATABASE.TEST}}'
    #     WSGI = 'gunicorn'  # gunicorn waitress, flask
    #     PORT = 80
    #     DEBUG = false
    #     TESTING = false

[DATABASE]  # SQLAlchemy Database URL: dialect+driver://username:password@host:port/database
    [DATABASE.DEVELOPMENT] # DEBUG
        url = 'sqlite:///:memory:'
        # url = 'sqlite:///test.db'
        kwargs.echo = true
        # connect_args = {detect_types = '@sqlite3.PARSE_DECLTYPES | sqlite3.PARSE_COLNAMES', timeout=600}
    [DATABASE.TEST]
        url = 'sqlite:///test.db'
        kwargs.echo = false
        # Couldn't parse date string 'datetime.date(1950, 12, 29)' - value is not a string
        # connect_args = {detect_types = '@sqlite3.PARSE_DECLTYPES | sqlite3.PARSE_COLNAMES', timeout=600}
    # [DATABASE.PRODUCTION]
    #     IP = 'localhost'
    #     PORT = 5432
    #     url = 'postgresql://{{ENV_VAR:POSTGRE_USER}}:{{ENV_VAR:POSTGRE_PASSWD}}@{{DATABASE.PRODUCTION.IP}}:{DATABASE.PRODUCTION.PORT}/funlab'
    #     kwargs.echo = false
